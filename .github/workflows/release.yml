name: Release Build

on:
  release:
    types:
      - published

jobs:
  build-linux:
    name: Build for Linux (x86_64, ARM64)
    runs-on: ubuntu-latest

    strategy:
      matrix:
        platform: [x86_64-unknown-linux-gnu, aarch64-unknown-linux-gnu]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform }}

      - name: Install Dependencies for Linux ARM
        if: matrix.platform == 'aarch64-unknown-linux-gnu'
        run: sudo apt update && sudo apt install -y gcc-aarch64-linux-gnu

      - name: Set up Cargo for Linux ARM
        if: matrix.platform == 'aarch64-unknown-linux-gnu'
        run: |
          mkdir -p ~/.cargo
          echo '[target.aarch64-unknown-linux-gnu]' >> ~/.cargo/config.toml
          echo 'linker = "aarch64-linux-gnu-gcc"' >> ~/.cargo/config.toml

      - name: Build and Package
        run: |
          cargo build --target ${{ matrix.platform }} --release
          mkdir -p target/${{ matrix.platform }}/release
          cp -r target/debug/Levels target/${{ matrix.platform }}/release
          zip -r ${{ matrix.platform }}.zip target/${{ matrix.platform }}

      - name: Upload File to Assets
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ matrix.platform }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-windows:
    name: Build for Windows (x86_64)
    runs-on: windows-latest

    strategy:
      matrix:
        platform: [x86_64-pc-windows-gnu]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform }}

      - name: Build and Package
        run: |
          cargo build --target ${{ matrix.platform }} --release
          if (-not (Test-Path target/${{ matrix.platform }}/release)) { New-Item -ItemType Directory -Path target/${{ matrix.platform }}/release }
          Copy-Item -Path target/release/* -Destination target/${{ matrix.platform }}/release -Recurse -Force
          Compress-Archive -Path target/${{ matrix.platform }} -DestinationPath ${{ matrix.platform }}.zip -Force
        env:
          RUSTFLAGS: "-C target-feature=+crt-static"

      - name: Upload File to Assets
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ matrix.platform }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-macos:
    name: Build for macOS (x86_64, ARM64)
    runs-on: macos-latest

    strategy:
      matrix:
        platform: [x86_64-apple-darwin, aarch64-apple-darwin]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform }}

      - name: Build and Package
        run: |
          cargo build --target ${{ matrix.platform }} --release
          mkdir -p target/${{ matrix.platform }}/release
          cp -r target/debug/Levels target/${{ matrix.platform }}/release
          zip -r ${{ matrix.platform }}.zip target/${{ matrix.platform }}

      - name: Upload File to Assets
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ matrix.platform }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

